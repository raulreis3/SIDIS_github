##
## server
##
server.port=8080
app.base-url=http://localhost:8080/api/
app.book-path=book/

##
## Profiles
##
spring.profiles.active=bootstrap

##
## OpenAPI
##
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

##
## JWT
##
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

##
## datasource
##
spring.datasource.url=jdbc:h2:tcp://localhost/~/test2
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
##spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
##spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect

## show SQL
spring.jpa.show-sql=false
hibernate.show_sql=false
spring.jpa.hibernate.format_sql=true

## database schema generation
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy

##
## H2 console for development purposes.
## e.g., http://localhost:8080/h2-console
##
## for security reasons this setting should be false
spring.h2.console.enabled=false

##
## MULTIPART (MultipartProperties)
##
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

##
## File Storage Properties
##
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=C:/bookcovers/
#spring.web.resources.static-locations=file:/C:/bookcovers/
file.upload-dir=src/main/resources/bookcovers/
spring.web.resources.static-locations=file:src/main/resources/bookcovers/

##
## Logging
##
logging.level.com.example.demo=DEBUG
#logging.level.org.springframework=DEBUG

##logging.level.org.springframework=DEBUG
